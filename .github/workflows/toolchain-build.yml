name: GCC+LLD Build

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0,4'

env:
      GITHUB_EMAIL: ${{ secrets.EMAIL }}
      GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
      GITHUB_USER: ${{ secrets.USERNAME }}
      BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      CHAT_ID: ${{ secrets.CHAT }}

jobs:
  build-tc:
    runs-on: buildjet-64vcpu-ubuntu-2204
    container:
      image: diazaji/debian:gcc
    steps:
    - uses: actions/checkout@v3
    - name: Build & Push
      run: |
        script_dir=$(pwd)
        git config --global user.name "${GITHUB_USER}"
        git config --global user.email "${GITHUB_EMAIL}"
        git clone https://"${GITHUB_USER}":"${GITHUB_TOKEN}"@github.com/"${GITHUB_USER}"/gcc-arm64 ../gcc-arm64 -b gcc-latest --depth 5
        git clone https://"${GITHUB_USER}":"${GITHUB_TOKEN}"@github.com/"${GITHUB_USER}"/gcc-arm ../gcc-arm -b gcc-latest --depth 5
        rm -rf ../gcc-arm64/*
        rm -rf ../gcc-arm/*
        chmod a+x build-*.sh
        curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" -d chat_id="${CHAT_ID}" -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="<b>Starting ARM64 GCC Build</b>"
        ./build-gcc.sh -a arm64
        ./build-lld.sh -a arm64
        cd ../gcc-arm64
        ./bin/aarch64-elf-gcc -v 2>&1 | tee /tmp/gcc-version
        ./bin/aarch64-elf-ld.lld -v 2>&1 | tee /tmp/lld-arm64-version
        bash "$script_dir/strip-binaries.sh"
        git add . -f
        git commit -as -m "Import ARM64 GCC ${{ steps.get-date.outputs.date }}" -m "Build completed on: $(/bin/date)" -m "Configuration: $(/bin/cat /tmp/gcc-version)" -m "LLD: $(/bin/cat /tmp/lld-arm64-version)"
        git push origin gcc-latest -f
        cd $script_dir
        curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" -d chat_id="${CHAT_ID}" -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="<b>Starting ARM (32-bit) GCC Build</b>"
        ./build-gcc.sh -a arm
        ./build-lld.sh -a arm
        cd ../gcc-arm
        ./bin/arm-eabi-gcc -v 2>&1 | tee /tmp/gcc-arm-version
        ./bin/arm-eabi-ld.lld -v 2>&1 | tee /tmp/lld-arm-version
        bash "$script_dir/strip-binaries.sh"
        git add . -f
        git commit -as -m "Import ARM GCC ${{ steps.get-date.outputs.date }}" -m "Build completed on: $(/bin/date)" -m "Configuration: $(/bin/cat /tmp/gcc-arm-version)" -m "LLD: $(/bin/cat /tmp/lld-arm-version)"
        git push origin gcc-latest -f
        curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" -d chat_id="${CHAT_ID}" -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="It's $(date +%A) my dudes!"

    - uses: yanzay/notify-telegram@v0.1.0
      if: always()
      with:
        chat: ${{ secrets.CHAT }} # user id or channel name secret
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }} # token secret
        status: ${{ job.status }} # do not modify this line
